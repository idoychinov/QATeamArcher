import unittest
bdLibPath = os.path.abspath(sys.argv[0] + "..")
if not bdLibPath in sys.path:
    sys.path.append(bdLibPath)
from _lib import *


class ImportTeams(unittest.TestCase):

    def test_001_ImportTeams(self):
        RunBrowserToUrl("firefox", "http://stage.telerikacademy.com/Administration_Teamwork/ImportTeams")
        wait(Tils.academy_logo, 15)
        click(ImportTeamsPage.teamwork_dropdown)
        click(ImportTeamsPage.select_TeamworkP)
        click(ImportTeamsPage.set_number_users); sleep(0.5)
        type(Key.DELETE + Key.NUM8)
        click(ImportTeamsPage.select_teamname); sleep(2)
        wheel(ImportTeamsPage.wheel_target, WHEEL_DOWN, 1)
        wait(ImportTeamsPage.set_teamname, 3)
        click(ImportTeamsPage.set_teamname)
        click(ImportTeamsPage.select_files)
        type(ImportTeamsPage.file_name, "UserWantInTeamwork.xls")
        click(ImportTeamsPage.open_button)
        assert exists(ImportTeamsPage.exist_importedFile)
        click(ImportTeamsPage.column_toSort)
        click(ImportTeamsPage.select_column_toSort)
        click(ImportTeamsPage.import_button)
        assert not exists(ImportTeamsPage.asert_bug_message)

    # def test_002_TryToImportTeamWhitoutSelectingTeamwork_TCId_218(self):
    #     RunBrowserToUrl("firefox", "http://stage.telerikacademy.com/Administration_Teamwork/ImportTeams")
    #     wait(Tils.academy_logo, 15)
    #     click(ImportTeamsPage.set_number_users); sleep(0.5)
    #     type(Key.DELETE + Key.NUM8)
    #     click(ImportTeamsPage.select_teamname); sleep(2)
    #     wheel(ImportTeamsPage.wheel_target, WHEEL_DOWN, 1)
    #     wait(ImportTeamsPage.set_teamname, 3)
    #     click(ImportTeamsPage.set_teamname)
    #     click(ImportTeamsPage.select_files)
    #     type(ImportTeamsPage.file_name, "UserWantInTeamwork.xls")
    #     click(ImportTeamsPage.open_button)
    #     assert exists(ImportTeamsPage.exist_importedFile)
    #     click(ImportTeamsPage.column_toSort)
    #     click(ImportTeamsPage.select_column_toSort)
    #     click(ImportTeamsPage.import_button)
    #     assert exists(ImportTeamsPage.chose_teamworkMessage)
    #
    # def test_003_TryToImportTeamWhitoutSettingNumberOfUsersPerTeam_TCId_219(self):
    #     RunBrowserToUrl("firefox", "http://stage.telerikacademy.com/Administration_Teamwork/ImportTeams")
    #     wait(Tils.academy_logo, 15)
    #     click(ImportTeamsPage.teamwork_dropdown)
    #     click(ImportTeamsPage.select_TeamworkP)
    #     click(ImportTeamsPage.select_teamname); sleep(2)
    #     wheel(ImportTeamsPage.wheel_target, WHEEL_DOWN, 1)
    #     wait(ImportTeamsPage.set_teamname, 3)
    #     click(ImportTeamsPage.set_teamname)
    #     click(ImportTeamsPage.select_files)
    #     type(ImportTeamsPage.file_name, "UserWantInTeamwork.xls")
    #     click(ImportTeamsPage.open_button)
    #     assert exists(ImportTeamsPage.exist_importedFile)
    #     click(ImportTeamsPage.column_toSort)
    #     click(ImportTeamsPage.select_column_toSort)
    #     click(ImportTeamsPage.import_button)
    #     assert exists(ImportTeamsPage.chose_numberOfUSersMessage)
    #
    # def test_004_TryToImportTeamWhitoutSettingTypeOfNames_TCId_220(self):
    #     RunBrowserToUrl("firefox", "http://stage.telerikacademy.com/Administration_Teamwork/ImportTeams")
    #     wait(Tils.academy_logo, 15)
    #     click(ImportTeamsPage.teamwork_dropdown)
    #     click(ImportTeamsPage.select_TeamworkP)
    #     click(ImportTeamsPage.set_number_users); sleep(0.5)
    #     type(Key.DELETE + Key.NUM8)
    #     click(ImportTeamsPage.select_files)
    #     type(ImportTeamsPage.file_name, "UserWantInTeamwork.xls")
    #     click(ImportTeamsPage.open_button)
    #     assert exists(ImportTeamsPage.exist_importedFile)
    #     click(ImportTeamsPage.column_toSort)
    #     click(ImportTeamsPage.select_column_toSort)
    #     click(ImportTeamsPage.import_button)
    #     wait(ImportTeamsPage.chose_teamworkNames, 5)
    #     assert exists(ImportTeamsPage.chose_teamworkNames)
    #
    # def test_005_TryToImportTeamWhitoutSelctExcelFile_TCId_221(self):
    #     RunBrowserToUrl("firefox", "http://stage.telerikacademy.com/Administration_Teamwork/ImportTeams")
    #     wait(Tils.academy_logo, 15)
    #     click(ImportTeamsPage.teamwork_dropdown)
    #     click(ImportTeamsPage.select_TeamworkP)
    #     click(ImportTeamsPage.set_number_users); sleep(0.5)
    #     type(Key.DELETE + Key.NUM8)
    #     click(ImportTeamsPage.select_teamname); sleep(2)
    #     wheel(ImportTeamsPage.wheel_target, WHEEL_DOWN, 1)
    #     wait(ImportTeamsPage.set_teamname, 3)
    #     click(ImportTeamsPage.set_teamname)
    #     click(ImportTeamsPage.column_toSort)
    #     click(ImportTeamsPage.select_column_toSort)
    #     click(ImportTeamsPage.import_button)
    #     assert exists(ImportTeamsPage.chose_fileToImportMessage)
    #
    # def test_006_TryToImportTeamWithInvalidImportedFile(self):
    #     RunBrowserToUrl("firefox", "http://stage.telerikacademy.com/Administration_Teamwork/ImportTeams")
    #     wait(Tils.academy_logo, 15)
    #     click(ImportTeamsPage.teamwork_dropdown)
    #     click(ImportTeamsPage.select_TeamworkP)
    #     click(ImportTeamsPage.set_number_users); sleep(0.5)
    #     type(Key.DELETE + Key.NUM8)
    #     click(ImportTeamsPage.select_teamname); sleep(2)
    #     wheel(ImportTeamsPage.wheel_target, WHEEL_DOWN, 1)
    #     wait(ImportTeamsPage.set_teamname, 3)
    #     click(ImportTeamsPage.set_teamname)
    #     click(ImportTeamsPage.select_files)
    #     type(ImportTeamsPage.file_name, "ImportTeams.png")
    #     click(ImportTeamsPage.open_button); sleep(0.5)
    #     click(ImportTeamsPage.column_toSort)
    #     click(ImportTeamsPage.select_column_toSort)
    #     click(ImportTeamsPage.import_button)
    #     assert exists(ImportTeamsPage.invalid_importFileMessage)


if __name__ == '__main__':
    suite = unittest.TestLoader().loadTestsFromTestCase(ImportTeams)
    outfile = open("import_teams.html", "w")
    runner = HTMLTestRunner.HTMLTestRunner(stream=outfile, title='Import Teams test Report')
    runner.run(suite)
    outfile.close()
